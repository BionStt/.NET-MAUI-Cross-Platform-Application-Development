@page "/entry/{SelectedItemId}"

@using System.Collections.ObjectModel
@using System.Diagnostics
@using KPCLib
@using KeePassLib
@using PassXYZ.Vault.Shared
@using PassXYZ.Vault.Services

@namespace PassXYZ.Vault.Pages

<!-- Back button and title -->
<Navbar ParentLink="@selectedItem?.GetParentLink()" Title="@selectedItem?.Name" DialogId="@_dialogEditId"
        OnAddClick="@(() => {_isNewField=true;})" />

<!-- List view with context menu -->
<ListView Items="fields">
    <Row Context="field">
        @if (field.ShowContextAction == null)
        {
            <span class="oi oi-pencil" aria-hidden="true"></span>
            <div class="d-flex gap-2 w-100 justify-content-between">
                <div>
                    <h6 class="mb-0">@field.Key</h6>
                    <p class="mb-0">@field.Value</p>
                </div>
            </div>
            <button class="opacity-50 btn btn-light dropdown-toggle" type="button"
                id="itemDetailContextMenu" data-bs-toggle="dropdown" aria-expanded="false"
                @onclick="@(() => listGroupField=field)">
                <span class="oi oi-menu" aria-hidden="true"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="itemDetailContextMenu">
                <li>
                    <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#@_dialogEditId"
                        @onclick="@(() => _isNewField=false)">
                        Edit
                    </button>
                </li>
                <li>
                    <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#@_dialogDeleteId">
                        Delete
                    </button>
                </li>
                @if (field.IsProtected)
                {
                    <li>
                        <button class="dropdown-item" @onclick="OnToggleShowPassword">
                            @if (field.IsHide)
                            {
                                <span>Show</span>
                            }
                            else
                            {
                                <span>Hide</span>
                            }
                        </button>
                    </li>
                }
            </ul>
        }
    </Row>
    <Footer>
        @((MarkupString)notes)
    </Footer>
</ListView>

<!-- Editing Modal -->
<CascadingValue Value="@_dialogEditId" Name="Id">
    <EditorDialog @bind-Key="listGroupField.Key" @bind-Value="listGroupField.EditValue"
                  IsKeyEditingEnable=@_isNewField OnSave="UpdateFieldAsync"
                  KeyPlaceHolder="Field name" ValuePlaceHolder="Field content">
        @if (_isNewField)
        {
            <div class="form-check">
                <input class="form-check-input" type="checkbox" @bind="listGroupField.IsProtected" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">
                    Password
                </label>
            </div>
        }
    </EditorDialog>
</CascadingValue>

<!-- Deleting Modal -->
<CascadingValue Value="@_dialogDeleteId" Name="Id">
    <ConfirmDialog Title=@listGroupField.Key OnConfirmClick="DeleteFieldAsync" />
</CascadingValue>
